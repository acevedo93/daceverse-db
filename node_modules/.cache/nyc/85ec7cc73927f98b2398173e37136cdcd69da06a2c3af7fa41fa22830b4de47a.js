'use strict';var cov_23st1075uu=function(){var path="/home/david/code/daceverse/daceverse-db/src/tests/metric.spec.js";var hash="5b804502c6fee831374cd02a4efe7ffdd4195fd7";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/david/code/daceverse/daceverse-db/src/tests/metric.spec.js",statementMap:{"0":{start:{line:3,column:9},end:{line:3,column:13}},"1":{start:{line:5,column:13},end:{line:5,column:27}},"2":{start:{line:7,column:19},end:{line:7,column:40}},"3":{start:{line:9,column:14},end:{line:9,column:30}},"4":{start:{line:11,column:14},end:{line:11,column:18}},"5":{start:{line:12,column:15},end:{line:16,column:1}},"6":{start:{line:17,column:0},end:{line:22,column:3}},"7":{start:{line:19,column:24},end:{line:19,column:38}},"8":{start:{line:21,column:2},end:{line:21,column:35}},"9":{start:{line:23,column:0},end:{line:25,column:3}},"10":{start:{line:24,column:2},end:{line:24,column:11}},"11":{start:{line:26,column:0},end:{line:28,column:3}},"12":{start:{line:27,column:2},end:{line:27,column:53}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:15,column:11},end:{line:15,column:12}},loc:{start:{line:15,column:23},end:{line:15,column:25}},line:15},"1":{name:"(anonymous_1)",decl:{start:{line:17,column:16},end:{line:17,column:17}},loc:{start:{line:17,column:28},end:{line:22,column:1}},line:17},"2":{name:"(anonymous_2)",decl:{start:{line:23,column:21},end:{line:23,column:22}},loc:{start:{line:23,column:26},end:{line:25,column:1}},line:23},"3":{name:"(anonymous_3)",decl:{start:{line:26,column:21},end:{line:26,column:22}},loc:{start:{line:26,column:26},end:{line:28,column:1}},line:26}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},f:{"0":0,"1":0,"2":0,"3":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"5b804502c6fee831374cd02a4efe7ffdd4195fd7"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();let db=(cov_23st1075uu.s[0]++,null);const test=(cov_23st1075uu.s[1]++,require('ava'));const proxyquire=(cov_23st1075uu.s[2]++,require('proxyquire'));const sinon=(cov_23st1075uu.s[3]++,require('sinon'));let sandbox=(cov_23st1075uu.s[4]++,null);const config=(cov_23st1075uu.s[5]++,{// este objeto de configuracion se le pasa a la base solo como base
// la configuracion de la base de prueba se genera en index validando que tiene esa config
logging:function(){cov_23st1075uu.f[0]++;}});cov_23st1075uu.s[6]++;test.beforeEach(async()=>{cov_23st1075uu.f[1]++;//obtenemos el modulo de configuracion de bbase de datos
const setupDatabase=(cov_23st1075uu.s[7]++,require('../'));cov_23st1075uu.s[8]++;db=await setupDatabase(config);});cov_23st1075uu.s[9]++;test('make it pass',t=>{cov_23st1075uu.f[2]++;cov_23st1075uu.s[10]++;t.pass();});cov_23st1075uu.s[11]++;test('metric exist',t=>{cov_23st1075uu.f[3]++;cov_23st1075uu.s[12]++;t.truthy(db.Metric,'Metric service should exist');});//# sourceMappingURL=/home/david/code/daceverse/daceverse-db/node_modules/.cache/ava/1126557b4052f876443b74128063dd14.js.map