'use strict';var cov_2nvztf191d=function(){var path="/home/david/code/daceverse/daceverse-db/src/tests/agent.spec.js";var hash="979a7ae014105d80f66fb64eb388ee4d621afab5";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/david/code/daceverse/daceverse-db/src/tests/agent.spec.js",statementMap:{"0":{start:{line:3,column:9},end:{line:3,column:13}},"1":{start:{line:5,column:13},end:{line:5,column:27}},"2":{start:{line:7,column:19},end:{line:7,column:40}},"3":{start:{line:9,column:14},end:{line:9,column:30}},"4":{start:{line:11,column:22},end:{line:11,column:57}},"5":{start:{line:13,column:15},end:{line:15,column:1}},"6":{start:{line:16,column:14},end:{line:16,column:18}},"7":{start:{line:17,column:19},end:{line:19,column:1}},"8":{start:{line:20,column:15},end:{line:21,column:1}},"9":{start:{line:22,column:11},end:{line:22,column:12}},"10":{start:{line:23,column:13},end:{line:23,column:26}},"11":{start:{line:24,column:17},end:{line:28,column:1}},"12":{start:{line:29,column:16},end:{line:29,column:20}},"13":{start:{line:31,column:0},end:{line:51,column:3}},"14":{start:{line:32,column:2},end:{line:32,column:34}},"15":{start:{line:33,column:2},end:{line:35,column:4}},"16":{start:{line:37,column:2},end:{line:37,column:38}},"17":{start:{line:38,column:2},end:{line:38,column:87}},"18":{start:{line:40,column:2},end:{line:40,column:37}},"19":{start:{line:41,column:2},end:{line:41,column:90}},"20":{start:{line:42,column:2},end:{line:42,column:36}},"21":{start:{line:43,column:2},end:{line:43,column:79}},"22":{start:{line:46,column:24},end:{line:49,column:4}},"23":{start:{line:47,column:28},end:{line:47,column:37}},"24":{start:{line:48,column:29},end:{line:48,column:39}},"25":{start:{line:50,column:2},end:{line:50,column:35}},"26":{start:{line:52,column:0},end:{line:54,column:3}},"27":{start:{line:53,column:2},end:{line:53,column:31}},"28":{start:{line:55,column:0},end:{line:57,column:3}},"29":{start:{line:56,column:2},end:{line:56,column:11}},"30":{start:{line:58,column:0},end:{line:60,column:3}},"31":{start:{line:59,column:2},end:{line:59,column:51}},"32":{start:{line:61,column:0},end:{line:66,column:3}},"33":{start:{line:62,column:2},end:{line:62,column:70}},"34":{start:{line:63,column:2},end:{line:63,column:79}},"35":{start:{line:64,column:2},end:{line:64,column:76}},"36":{start:{line:65,column:2},end:{line:65,column:81}},"37":{start:{line:67,column:0},end:{line:73,column:3}},"38":{start:{line:68,column:16},end:{line:68,column:43}},"39":{start:{line:69,column:2},end:{line:69,column:70}},"40":{start:{line:70,column:2},end:{line:70,column:78}},"41":{start:{line:71,column:2},end:{line:71,column:44}},"42":{start:{line:72,column:2},end:{line:72,column:71}},"43":{start:{line:74,column:0},end:{line:77,column:3}},"44":{start:{line:75,column:16},end:{line:75,column:53}},"45":{start:{line:76,column:2},end:{line:76,column:64}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:14,column:11},end:{line:14,column:12}},loc:{start:{line:14,column:23},end:{line:14,column:25}},line:14},"1":{name:"(anonymous_1)",decl:{start:{line:31,column:16},end:{line:31,column:17}},loc:{start:{line:31,column:28},end:{line:51,column:1}},line:31},"2":{name:"(anonymous_2)",decl:{start:{line:47,column:22},end:{line:47,column:23}},loc:{start:{line:47,column:28},end:{line:47,column:37}},line:47},"3":{name:"(anonymous_3)",decl:{start:{line:48,column:23},end:{line:48,column:24}},loc:{start:{line:48,column:29},end:{line:48,column:39}},line:48},"4":{name:"(anonymous_4)",decl:{start:{line:52,column:15},end:{line:52,column:16}},loc:{start:{line:52,column:20},end:{line:54,column:1}},line:52},"5":{name:"(anonymous_5)",decl:{start:{line:55,column:21},end:{line:55,column:22}},loc:{start:{line:55,column:26},end:{line:57,column:1}},line:55},"6":{name:"(anonymous_6)",decl:{start:{line:58,column:14},end:{line:58,column:15}},loc:{start:{line:58,column:19},end:{line:60,column:1}},line:58},"7":{name:"(anonymous_7)",decl:{start:{line:61,column:21},end:{line:61,column:22}},loc:{start:{line:61,column:26},end:{line:66,column:1}},line:61},"8":{name:"(anonymous_8)",decl:{start:{line:67,column:30},end:{line:67,column:31}},loc:{start:{line:67,column:41},end:{line:73,column:1}},line:67},"9":{name:"(anonymous_9)",decl:{start:{line:74,column:54},end:{line:74,column:55}},loc:{start:{line:74,column:65},end:{line:77,column:1}},line:74}},branchMap:{"0":{loc:{start:{line:53,column:2},end:{line:53,column:30}},type:"binary-expr",locations:[{start:{line:53,column:2},end:{line:53,column:9}},{start:{line:53,column:13},end:{line:53,column:30}}],line:53}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},b:{"0":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"979a7ae014105d80f66fb64eb388ee4d621afab5"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();let db=(cov_2nvztf191d.s[0]++,null);const test=(cov_2nvztf191d.s[1]++,require('ava'));const proxyquire=(cov_2nvztf191d.s[2]++,require('proxyquire'));const sinon=(cov_2nvztf191d.s[3]++,require('sinon'));const agentFixtures=(cov_2nvztf191d.s[4]++,require('./fixtures/agent.fixture'));const config=(cov_2nvztf191d.s[5]++,{logging:function(){cov_2nvztf191d.f[0]++;}});let sandbox=(cov_2nvztf191d.s[6]++,null);const MetricStub=(cov_2nvztf191d.s[7]++,{belongsTo:sinon.spy()});const single=(cov_2nvztf191d.s[8]++,{...agentFixtures.single});const id=(cov_2nvztf191d.s[9]++,1);const uuid=(cov_2nvztf191d.s[10]++,'yyy-yyy-yyy');const uuidArgs=(cov_2nvztf191d.s[11]++,{where:{uuid}});let AgentStub=(cov_2nvztf191d.s[12]++,null);// -------------------------------//
cov_2nvztf191d.s[13]++;test.beforeEach(async()=>{cov_2nvztf191d.f[1]++;cov_2nvztf191d.s[14]++;sandbox=sinon.createSandbox();cov_2nvztf191d.s[15]++;AgentStub={hasMany:sandbox.spy()};// find By Id
cov_2nvztf191d.s[16]++;AgentStub.findById=sandbox.stub();cov_2nvztf191d.s[17]++;AgentStub.findById.withArgs(id).returns(Promise.resolve(agentFixtures.findById(id)));// createOrupdate when user exists
cov_2nvztf191d.s[18]++;AgentStub.findOne=sandbox.stub();cov_2nvztf191d.s[19]++;AgentStub.findOne.withArgs(uuidArgs).returns(Promise.resolve(agentFixtures.byuuid(id)));cov_2nvztf191d.s[20]++;AgentStub.update=sandbox.stub();cov_2nvztf191d.s[21]++;AgentStub.update.withArgs(single,uuidArgs).returns(Promise.resolve(single));// AgentStub.create = sandbox.stub();
// AgentStub.create.withArgs()
const setupDatabase=(cov_2nvztf191d.s[22]++,proxyquire('../',{'./models/agent':()=>{cov_2nvztf191d.f[2]++;cov_2nvztf191d.s[23]++;return AgentStub;},'./models/metric':()=>{cov_2nvztf191d.f[3]++;cov_2nvztf191d.s[24]++;return MetricStub;}}));cov_2nvztf191d.s[25]++;db=await setupDatabase(config);});cov_2nvztf191d.s[26]++;test.afterEach(t=>{cov_2nvztf191d.f[4]++;cov_2nvztf191d.s[27]++;(cov_2nvztf191d.b[0][0]++,sandbox)&&(cov_2nvztf191d.b[0][1]++,sandbox.restore());});cov_2nvztf191d.s[28]++;test('make it pass',t=>{cov_2nvztf191d.f[5]++;cov_2nvztf191d.s[29]++;t.pass();});cov_2nvztf191d.s[30]++;test('Agent',t=>{cov_2nvztf191d.f[6]++;cov_2nvztf191d.s[31]++;t.truthy(db.Agent,'Agent service chould exist');});cov_2nvztf191d.s[32]++;test.serial('Setup',t=>{cov_2nvztf191d.f[7]++;cov_2nvztf191d.s[33]++;t.true(AgentStub.hasMany.called,'AgentModel.hasmany was executed');cov_2nvztf191d.s[34]++;t.true(AgentStub.hasMany.calledWith(MetricStub),'argument is full correct');cov_2nvztf191d.s[35]++;t.true(MetricStub.belongsTo.called,'metricModel.belongsTo was executed');cov_2nvztf191d.s[36]++;t.true(MetricStub.belongsTo.calledWith(AgentStub),'argument is full correct');});cov_2nvztf191d.s[37]++;test.serial('Agent#findById',async t=>{cov_2nvztf191d.f[8]++;const agent=(cov_2nvztf191d.s[38]++,await db.Agent.findById(id));cov_2nvztf191d.s[39]++;t.true(AgentStub.findById.called,'find by id is should be called');cov_2nvztf191d.s[40]++;t.true(AgentStub.findById.calledOnce,'find by id is should be calledOnce');cov_2nvztf191d.s[41]++;t.true(AgentStub.findById.calledWith(id));cov_2nvztf191d.s[42]++;t.deepEqual(agent,agentFixtures.findById(id),'should be the same');});cov_2nvztf191d.s[43]++;test.serial('Agent#createOrUpdate - when user exist',async t=>{cov_2nvztf191d.f[9]++;const agent=(cov_2nvztf191d.s[44]++,await db.Agent.createOrUpdate(single));cov_2nvztf191d.s[45]++;t.deepEqual(agent,single,'Agent should be equal to single');});//# sourceMappingURL=/home/david/code/daceverse/daceverse-db/node_modules/.cache/ava/8e17e7cc2dfef708c3677754de866597.js.map