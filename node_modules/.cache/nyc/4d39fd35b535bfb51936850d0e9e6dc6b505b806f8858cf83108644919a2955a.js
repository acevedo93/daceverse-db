'use strict';var cov_1f98cqt5n2=function(){var path="/home/david/code/daceverse/daceverse-db/src/controlers/metric.ctrl.js";var hash="03f7a7e44a8a27d08ee04c6f8692c0a9a00fec37";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/david/code/daceverse/daceverse-db/src/controlers/metric.ctrl.js",statementMap:{"0":{start:{line:3,column:0},end:{line:58,column:1}},"1":{start:{line:5,column:18},end:{line:16,column:5}},"2":{start:{line:18,column:4},end:{line:18,column:37}},"3":{start:{line:23,column:18},end:{line:39,column:5}},"4":{start:{line:40,column:4},end:{line:40,column:37}},"5":{start:{line:43,column:18},end:{line:45,column:6}},"6":{start:{line:46,column:4},end:{line:50,column:5}},"7":{start:{line:47,column:6},end:{line:47,column:47}},"8":{start:{line:48,column:21},end:{line:48,column:53}},"9":{start:{line:49,column:6},end:{line:49,column:28}},"10":{start:{line:51,column:4},end:{line:51,column:16}},"11":{start:{line:53,column:2},end:{line:57,column:3}}},fnMap:{"0":{name:"MetricController",decl:{start:{line:3,column:26},end:{line:3,column:42}},loc:{start:{line:3,column:69},end:{line:58,column:1}},line:3},"1":{name:"findByAgentUuid",decl:{start:{line:4,column:17},end:{line:4,column:32}},loc:{start:{line:4,column:40},end:{line:20,column:3}},line:4},"2":{name:"findByTypeAgentUuid",decl:{start:{line:22,column:17},end:{line:22,column:36}},loc:{start:{line:22,column:50},end:{line:41,column:3}},line:22},"3":{name:"create",decl:{start:{line:42,column:17},end:{line:42,column:23}},loc:{start:{line:42,column:39},end:{line:52,column:3}},line:42}},branchMap:{"0":{loc:{start:{line:46,column:4},end:{line:50,column:5}},type:"if",locations:[{start:{line:46,column:4},end:{line:50,column:5}},{start:{line:46,column:4},end:{line:50,column:5}}],line:46}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},f:{"0":0,"1":0,"2":0,"3":0},b:{"0":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"03f7a7e44a8a27d08ee04c6f8692c0a9a00fec37"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();cov_1f98cqt5n2.s[0]++;module.exports=function MetricController(MetricModel,AgentModel){cov_1f98cqt5n2.f[0]++;async function findByAgentUuid(uuid){cov_1f98cqt5n2.f[1]++;const query=(cov_1f98cqt5n2.s[1]++,{attributes:['type'],group:['type'],include:[{attributes:[],model:AgentModel,where:{uuid}}],raw:true});cov_1f98cqt5n2.s[2]++;return MetricModel.findAll(query);}async function findByTypeAgentUuid(type,uuid){cov_1f98cqt5n2.f[2]++;const query=(cov_1f98cqt5n2.s[3]++,{attributes:['id','type','value','createdAt'],where:{type},limit:20,order:[['createdAt','DESC']],include:[{attributes:[],model:AgentModel,where:{uuid}}],raw:true});cov_1f98cqt5n2.s[4]++;return MetricModel.findAll(query);}async function create(uuid,metric){cov_1f98cqt5n2.f[3]++;const agent=(cov_1f98cqt5n2.s[5]++,await AgentModel.findOne({where:{uuid}}));cov_1f98cqt5n2.s[6]++;if(agent){cov_1f98cqt5n2.b[0][0]++;cov_1f98cqt5n2.s[7]++;metric={...metric,agentId:agent.id};const result=(cov_1f98cqt5n2.s[8]++,await MetricModel.create(metric));cov_1f98cqt5n2.s[9]++;return result.toJSON();}else{cov_1f98cqt5n2.b[0][1]++;}cov_1f98cqt5n2.s[10]++;return false;}cov_1f98cqt5n2.s[11]++;return{create:create,findByAgentUuid:findByAgentUuid,findByTypeAgentUuid:findByTypeAgentUuid};};