'use strict';var cov_2nvztf191d=function(){var path="/home/david/code/daceverse/daceverse-db/src/tests/agent.spec.js";var hash="ad547ae5cc8cab65bb1011a23e0f68df7491ff46";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/david/code/daceverse/daceverse-db/src/tests/agent.spec.js",statementMap:{"0":{start:{line:3,column:9},end:{line:3,column:13}},"1":{start:{line:5,column:13},end:{line:5,column:27}},"2":{start:{line:7,column:19},end:{line:7,column:40}},"3":{start:{line:9,column:14},end:{line:9,column:30}},"4":{start:{line:11,column:15},end:{line:13,column:1}},"5":{start:{line:14,column:14},end:{line:14,column:18}},"6":{start:{line:15,column:19},end:{line:17,column:1}},"7":{start:{line:18,column:16},end:{line:18,column:20}},"8":{start:{line:19,column:0},end:{line:29,column:3}},"9":{start:{line:20,column:2},end:{line:20,column:34}},"10":{start:{line:21,column:2},end:{line:23,column:4}},"11":{start:{line:24,column:24},end:{line:27,column:4}},"12":{start:{line:25,column:28},end:{line:25,column:37}},"13":{start:{line:26,column:29},end:{line:26,column:39}},"14":{start:{line:28,column:2},end:{line:28,column:35}},"15":{start:{line:30,column:0},end:{line:32,column:3}},"16":{start:{line:31,column:2},end:{line:31,column:31}},"17":{start:{line:33,column:0},end:{line:35,column:3}},"18":{start:{line:34,column:2},end:{line:34,column:11}},"19":{start:{line:36,column:0},end:{line:39,column:3}},"20":{start:{line:37,column:2},end:{line:37,column:18}},"21":{start:{line:38,column:2},end:{line:38,column:51}},"22":{start:{line:40,column:0},end:{line:45,column:3}},"23":{start:{line:41,column:2},end:{line:41,column:70}},"24":{start:{line:42,column:2},end:{line:42,column:79}},"25":{start:{line:43,column:2},end:{line:43,column:76}},"26":{start:{line:44,column:2},end:{line:44,column:81}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:12,column:11},end:{line:12,column:12}},loc:{start:{line:12,column:23},end:{line:12,column:25}},line:12},"1":{name:"(anonymous_1)",decl:{start:{line:19,column:16},end:{line:19,column:17}},loc:{start:{line:19,column:28},end:{line:29,column:1}},line:19},"2":{name:"(anonymous_2)",decl:{start:{line:25,column:22},end:{line:25,column:23}},loc:{start:{line:25,column:28},end:{line:25,column:37}},line:25},"3":{name:"(anonymous_3)",decl:{start:{line:26,column:23},end:{line:26,column:24}},loc:{start:{line:26,column:29},end:{line:26,column:39}},line:26},"4":{name:"(anonymous_4)",decl:{start:{line:30,column:15},end:{line:30,column:16}},loc:{start:{line:30,column:20},end:{line:32,column:1}},line:30},"5":{name:"(anonymous_5)",decl:{start:{line:33,column:21},end:{line:33,column:22}},loc:{start:{line:33,column:26},end:{line:35,column:1}},line:33},"6":{name:"(anonymous_6)",decl:{start:{line:36,column:14},end:{line:36,column:15}},loc:{start:{line:36,column:19},end:{line:39,column:1}},line:36},"7":{name:"(anonymous_7)",decl:{start:{line:40,column:21},end:{line:40,column:22}},loc:{start:{line:40,column:26},end:{line:45,column:1}},line:40}},branchMap:{"0":{loc:{start:{line:31,column:2},end:{line:31,column:30}},type:"binary-expr",locations:[{start:{line:31,column:2},end:{line:31,column:9}},{start:{line:31,column:13},end:{line:31,column:30}}],line:31}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},b:{"0":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"ad547ae5cc8cab65bb1011a23e0f68df7491ff46"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();let db=(cov_2nvztf191d.s[0]++,null);const test=(cov_2nvztf191d.s[1]++,require('ava'));const proxyquire=(cov_2nvztf191d.s[2]++,require('proxyquire'));const sinon=(cov_2nvztf191d.s[3]++,require('sinon'));const config=(cov_2nvztf191d.s[4]++,{logging:function(){cov_2nvztf191d.f[0]++;}});let sandbox=(cov_2nvztf191d.s[5]++,null);const MetricStub=(cov_2nvztf191d.s[6]++,{belongsTo:sinon.spy()});let AgentStub=(cov_2nvztf191d.s[7]++,null);cov_2nvztf191d.s[8]++;test.beforeEach(async()=>{cov_2nvztf191d.f[1]++;cov_2nvztf191d.s[9]++;sandbox=sinon.createSandbox();cov_2nvztf191d.s[10]++;AgentStub={hasMany:sandbox.spy()};const setupDatabase=(cov_2nvztf191d.s[11]++,proxyquire('../',{'./models/agent':()=>{cov_2nvztf191d.f[2]++;cov_2nvztf191d.s[12]++;return AgentStub;},'./models/metric':()=>{cov_2nvztf191d.f[3]++;cov_2nvztf191d.s[13]++;return MetricStub;}}));cov_2nvztf191d.s[14]++;db=await setupDatabase(config);});cov_2nvztf191d.s[15]++;test.afterEach(t=>{cov_2nvztf191d.f[4]++;cov_2nvztf191d.s[16]++;(cov_2nvztf191d.b[0][0]++,sandbox)&&(cov_2nvztf191d.b[0][1]++,sandbox.restore());});cov_2nvztf191d.s[17]++;test('make it pass',t=>{cov_2nvztf191d.f[5]++;cov_2nvztf191d.s[18]++;t.pass();});cov_2nvztf191d.s[19]++;test('Agent',t=>{cov_2nvztf191d.f[6]++;cov_2nvztf191d.s[20]++;console.log(db);cov_2nvztf191d.s[21]++;t.truthy(db.Agent,'Agent service chould exist');});cov_2nvztf191d.s[22]++;test.serial('Setup',t=>{cov_2nvztf191d.f[7]++;cov_2nvztf191d.s[23]++;t.true(AgentStub.hasMany.called,'AgentModel.hasmany was executed');cov_2nvztf191d.s[24]++;t.true(AgentStub.hasMany.calledWith(MetricStub),'argument is full correct');cov_2nvztf191d.s[25]++;t.true(MetricStub.belongsTo.called,'metricModel.belongsTo was executed');cov_2nvztf191d.s[26]++;t.true(MetricStub.belongsTo.calledWith(AgentStub),'argument is full correct');});//# sourceMappingURL=/home/david/code/daceverse/daceverse-db/node_modules/.cache/ava/11236855c0b12a17eb3e26b8140052b1.js.map