'use strict';var cov_2nvztf191d=function(){var path="/home/david/code/daceverse/daceverse-db/src/tests/agent.spec.js";var hash="da88db0d76a2ba1e316b77e9979f57c6350a3986";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/david/code/daceverse/daceverse-db/src/tests/agent.spec.js",statementMap:{"0":{start:{line:3,column:9},end:{line:3,column:13}},"1":{start:{line:5,column:13},end:{line:5,column:27}},"2":{start:{line:7,column:19},end:{line:7,column:40}},"3":{start:{line:9,column:14},end:{line:9,column:30}},"4":{start:{line:11,column:22},end:{line:11,column:57}},"5":{start:{line:13,column:15},end:{line:15,column:1}},"6":{start:{line:16,column:14},end:{line:16,column:18}},"7":{start:{line:17,column:19},end:{line:19,column:1}},"8":{start:{line:20,column:15},end:{line:21,column:1}},"9":{start:{line:22,column:17},end:{line:23,column:1}},"10":{start:{line:24,column:11},end:{line:24,column:12}},"11":{start:{line:25,column:13},end:{line:25,column:26}},"12":{start:{line:26,column:17},end:{line:26,column:27}},"13":{start:{line:27,column:17},end:{line:31,column:1}},"14":{start:{line:32,column:22},end:{line:36,column:1}},"15":{start:{line:37,column:21},end:{line:41,column:1}},"16":{start:{line:42,column:16},end:{line:42,column:20}},"17":{start:{line:44,column:0},end:{line:74,column:3}},"18":{start:{line:45,column:2},end:{line:45,column:34}},"19":{start:{line:46,column:2},end:{line:48,column:4}},"20":{start:{line:50,column:2},end:{line:50,column:38}},"21":{start:{line:51,column:2},end:{line:51,column:87}},"22":{start:{line:53,column:2},end:{line:53,column:37}},"23":{start:{line:54,column:2},end:{line:54,column:92}},"24":{start:{line:55,column:2},end:{line:55,column:36}},"25":{start:{line:56,column:2},end:{line:56,column:79}},"26":{start:{line:57,column:2},end:{line:57,column:36}},"27":{start:{line:58,column:2},end:{line:63,column:6}},"28":{start:{line:60,column:6},end:{line:60,column:22}},"29":{start:{line:65,column:2},end:{line:65,column:37}},"30":{start:{line:66,column:2},end:{line:66,column:75}},"31":{start:{line:67,column:2},end:{line:67,column:94}},"32":{start:{line:68,column:2},end:{line:68,column:92}},"33":{start:{line:69,column:24},end:{line:72,column:4}},"34":{start:{line:70,column:28},end:{line:70,column:37}},"35":{start:{line:71,column:29},end:{line:71,column:39}},"36":{start:{line:73,column:2},end:{line:73,column:35}},"37":{start:{line:75,column:0},end:{line:77,column:3}},"38":{start:{line:76,column:2},end:{line:76,column:31}},"39":{start:{line:78,column:0},end:{line:80,column:3}},"40":{start:{line:79,column:2},end:{line:79,column:11}},"41":{start:{line:81,column:0},end:{line:83,column:3}},"42":{start:{line:82,column:2},end:{line:82,column:51}},"43":{start:{line:84,column:0},end:{line:89,column:3}},"44":{start:{line:85,column:2},end:{line:85,column:70}},"45":{start:{line:86,column:2},end:{line:86,column:79}},"46":{start:{line:87,column:2},end:{line:87,column:76}},"47":{start:{line:88,column:2},end:{line:88,column:81}},"48":{start:{line:90,column:0},end:{line:96,column:3}},"49":{start:{line:91,column:16},end:{line:91,column:43}},"50":{start:{line:92,column:2},end:{line:92,column:70}},"51":{start:{line:93,column:2},end:{line:93,column:78}},"52":{start:{line:94,column:2},end:{line:94,column:44}},"53":{start:{line:95,column:2},end:{line:95,column:71}},"54":{start:{line:97,column:0},end:{line:103,column:3}},"55":{start:{line:98,column:16},end:{line:98,column:53}},"56":{start:{line:99,column:2},end:{line:99,column:53}},"57":{start:{line:100,column:2},end:{line:100,column:66}},"58":{start:{line:101,column:2},end:{line:101,column:69}},"59":{start:{line:102,column:2},end:{line:102,column:64}},"60":{start:{line:104,column:0},end:{line:111,column:3}},"61":{start:{line:105,column:17},end:{line:105,column:41}},"62":{start:{line:106,column:2},end:{line:106,column:72}},"63":{start:{line:107,column:2},end:{line:107,column:72}},"64":{start:{line:108,column:2},end:{line:108,column:82}},"65":{start:{line:109,column:2},end:{line:109,column:70}},"66":{start:{line:110,column:2},end:{line:110,column:77}},"67":{start:{line:112,column:0},end:{line:117,column:3}},"68":{start:{line:113,column:17},end:{line:113,column:47}},"69":{start:{line:114,column:2},end:{line:114,column:64}},"70":{start:{line:115,column:2},end:{line:115,column:72}},"71":{start:{line:116,column:2},end:{line:116,column:66}},"72":{start:{line:118,column:0},end:{line:124,column:3}},"73":{start:{line:119,column:17},end:{line:119,column:56}},"74":{start:{line:120,column:2},end:{line:120,column:72}},"75":{start:{line:121,column:2},end:{line:121,column:72}},"76":{start:{line:122,column:2},end:{line:122,column:100}},"77":{start:{line:123,column:2},end:{line:123,column:65}},"78":{start:{line:125,column:0},end:{line:138,column:3}},"79":{start:{line:126,column:16},end:{line:126,column:55}},"80":{start:{line:127,column:2},end:{line:127,column:72}},"81":{start:{line:128,column:2},end:{line:128,column:72}},"82":{start:{line:129,column:2},end:{line:133,column:49}},"83":{start:{line:134,column:2},end:{line:134,column:70}},"84":{start:{line:135,column:2},end:{line:135,column:70}},"85":{start:{line:136,column:2},end:{line:136,column:95}},"86":{start:{line:137,column:2},end:{line:137,column:59}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:14,column:11},end:{line:14,column:12}},loc:{start:{line:14,column:23},end:{line:14,column:25}},line:14},"1":{name:"(anonymous_1)",decl:{start:{line:44,column:16},end:{line:44,column:17}},loc:{start:{line:44,column:28},end:{line:74,column:1}},line:44},"2":{name:"(anonymous_2)",decl:{start:{line:59,column:4},end:{line:59,column:5}},loc:{start:{line:59,column:13},end:{line:61,column:5}},line:59},"3":{name:"(anonymous_3)",decl:{start:{line:70,column:22},end:{line:70,column:23}},loc:{start:{line:70,column:28},end:{line:70,column:37}},line:70},"4":{name:"(anonymous_4)",decl:{start:{line:71,column:23},end:{line:71,column:24}},loc:{start:{line:71,column:29},end:{line:71,column:39}},line:71},"5":{name:"(anonymous_5)",decl:{start:{line:75,column:15},end:{line:75,column:16}},loc:{start:{line:75,column:20},end:{line:77,column:1}},line:75},"6":{name:"(anonymous_6)",decl:{start:{line:78,column:21},end:{line:78,column:22}},loc:{start:{line:78,column:26},end:{line:80,column:1}},line:78},"7":{name:"(anonymous_7)",decl:{start:{line:81,column:14},end:{line:81,column:15}},loc:{start:{line:81,column:19},end:{line:83,column:1}},line:81},"8":{name:"(anonymous_8)",decl:{start:{line:84,column:21},end:{line:84,column:22}},loc:{start:{line:84,column:26},end:{line:89,column:1}},line:84},"9":{name:"(anonymous_9)",decl:{start:{line:90,column:30},end:{line:90,column:31}},loc:{start:{line:90,column:41},end:{line:96,column:1}},line:90},"10":{name:"(anonymous_10)",decl:{start:{line:97,column:56},end:{line:97,column:57}},loc:{start:{line:97,column:67},end:{line:103,column:1}},line:97},"11":{name:"(anonymous_11)",decl:{start:{line:104,column:29},end:{line:104,column:30}},loc:{start:{line:104,column:40},end:{line:111,column:1}},line:104},"12":{name:"(anonymous_12)",decl:{start:{line:112,column:36},end:{line:112,column:37}},loc:{start:{line:112,column:47},end:{line:117,column:1}},line:112},"13":{name:"(anonymous_13)",decl:{start:{line:118,column:37},end:{line:118,column:38}},loc:{start:{line:118,column:48},end:{line:124,column:1}},line:118},"14":{name:"(anonymous_14)",decl:{start:{line:125,column:42},end:{line:125,column:43}},loc:{start:{line:125,column:53},end:{line:138,column:1}},line:125}},branchMap:{"0":{loc:{start:{line:76,column:2},end:{line:76,column:30}},type:"binary-expr",locations:[{start:{line:76,column:2},end:{line:76,column:9}},{start:{line:76,column:13},end:{line:76,column:30}}],line:76}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},b:{"0":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"da88db0d76a2ba1e316b77e9979f57c6350a3986"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();let db=(cov_2nvztf191d.s[0]++,null);const test=(cov_2nvztf191d.s[1]++,require('ava'));const proxyquire=(cov_2nvztf191d.s[2]++,require('proxyquire'));const sinon=(cov_2nvztf191d.s[3]++,require('sinon'));const agentFixtures=(cov_2nvztf191d.s[4]++,require('./fixtures/agent.fixture'));const config=(cov_2nvztf191d.s[5]++,{logging:function(){cov_2nvztf191d.f[0]++;}});let sandbox=(cov_2nvztf191d.s[6]++,null);const MetricStub=(cov_2nvztf191d.s[7]++,{belongsTo:sinon.spy()});const single=(cov_2nvztf191d.s[8]++,{...agentFixtures.single});const newAgent=(cov_2nvztf191d.s[9]++,{...agentFixtures.newAgent});const id=(cov_2nvztf191d.s[10]++,1);const uuid=(cov_2nvztf191d.s[11]++,'yyy-yyy-yyy');const username=(cov_2nvztf191d.s[12]++,'dodorian');const uuidArgs=(cov_2nvztf191d.s[13]++,{where:{uuid}});const ArgsConnected=(cov_2nvztf191d.s[14]++,{where:{connected:true}});const ArgsUserName=(cov_2nvztf191d.s[15]++,{where:{username}});let AgentStub=(cov_2nvztf191d.s[16]++,null);// -------------------------------//
cov_2nvztf191d.s[17]++;test.beforeEach(async()=>{cov_2nvztf191d.f[1]++;cov_2nvztf191d.s[18]++;sandbox=sinon.createSandbox();cov_2nvztf191d.s[19]++;AgentStub={hasMany:sandbox.spy()};// find By Id
cov_2nvztf191d.s[20]++;AgentStub.findById=sandbox.stub();cov_2nvztf191d.s[21]++;AgentStub.findById.withArgs(id).returns(Promise.resolve(agentFixtures.findById(id)));// createOrupdate when user exists
cov_2nvztf191d.s[22]++;AgentStub.findOne=sandbox.stub();cov_2nvztf191d.s[23]++;AgentStub.findOne.withArgs(uuidArgs).returns(Promise.resolve(agentFixtures.byuuid(uuid)));cov_2nvztf191d.s[24]++;AgentStub.update=sandbox.stub();cov_2nvztf191d.s[25]++;AgentStub.update.withArgs(single,uuidArgs).returns(Promise.resolve(single));cov_2nvztf191d.s[26]++;AgentStub.create=sandbox.stub();cov_2nvztf191d.s[27]++;AgentStub.create.withArgs(newAgent).returns(Promise.resolve({toJSON(){cov_2nvztf191d.f[2]++;cov_2nvztf191d.s[28]++;return newAgent;}}));// find all
cov_2nvztf191d.s[29]++;AgentStub.findAll=sandbox.stub();cov_2nvztf191d.s[30]++;AgentStub.findAll.withArgs().returns(Promise.resolve(agentFixtures.all));cov_2nvztf191d.s[31]++;AgentStub.findAll.withArgs(ArgsConnected).returns(Promise.resolve(agentFixtures.connected));cov_2nvztf191d.s[32]++;AgentStub.findAll.withArgs(ArgsUserName).returns(Promise.resolve(agentFixtures.userName));const setupDatabase=(cov_2nvztf191d.s[33]++,proxyquire('../',{'./models/agent':()=>{cov_2nvztf191d.f[3]++;cov_2nvztf191d.s[34]++;return AgentStub;},'./models/metric':()=>{cov_2nvztf191d.f[4]++;cov_2nvztf191d.s[35]++;return MetricStub;}}));cov_2nvztf191d.s[36]++;db=await setupDatabase(config);});cov_2nvztf191d.s[37]++;test.afterEach(t=>{cov_2nvztf191d.f[5]++;cov_2nvztf191d.s[38]++;(cov_2nvztf191d.b[0][0]++,sandbox)&&(cov_2nvztf191d.b[0][1]++,sandbox.restore());});cov_2nvztf191d.s[39]++;test('make it pass',t=>{cov_2nvztf191d.f[6]++;cov_2nvztf191d.s[40]++;t.pass();});cov_2nvztf191d.s[41]++;test('Agent',t=>{cov_2nvztf191d.f[7]++;cov_2nvztf191d.s[42]++;t.truthy(db.Agent,'Agent service chould exist');});cov_2nvztf191d.s[43]++;test.serial('Setup',t=>{cov_2nvztf191d.f[8]++;cov_2nvztf191d.s[44]++;t.true(AgentStub.hasMany.called,'AgentModel.hasmany was executed');cov_2nvztf191d.s[45]++;t.true(AgentStub.hasMany.calledWith(MetricStub),'argument is full correct');cov_2nvztf191d.s[46]++;t.true(MetricStub.belongsTo.called,'metricModel.belongsTo was executed');cov_2nvztf191d.s[47]++;t.true(MetricStub.belongsTo.calledWith(AgentStub),'argument is full correct');});cov_2nvztf191d.s[48]++;test.serial('Agent#findById',async t=>{cov_2nvztf191d.f[9]++;const agent=(cov_2nvztf191d.s[49]++,await db.Agent.findById(id));cov_2nvztf191d.s[50]++;t.true(AgentStub.findById.called,'find by id is should be called');cov_2nvztf191d.s[51]++;t.true(AgentStub.findById.calledOnce,'find by id is should be calledOnce');cov_2nvztf191d.s[52]++;t.true(AgentStub.findById.calledWith(id));cov_2nvztf191d.s[53]++;t.deepEqual(agent,agentFixtures.findById(id),'should be the same');});cov_2nvztf191d.s[54]++;test.serial('Agent#createOrUpdate - when agent exists',async t=>{cov_2nvztf191d.f[10]++;const agent=(cov_2nvztf191d.s[55]++,await db.Agent.createOrUpdate(single));cov_2nvztf191d.s[56]++;t.true(AgentStub.findOne.called,'should be call');cov_2nvztf191d.s[57]++;t.true(AgentStub.findOne.calledTwice,'should be call 2 times');cov_2nvztf191d.s[58]++;t.true(AgentStub.update.calledOnce,'update should be calle once');cov_2nvztf191d.s[59]++;t.deepEqual(agent,single,'Agent should be equal to single');});cov_2nvztf191d.s[60]++;test.serial('Agent#findAll',async t=>{cov_2nvztf191d.f[11]++;const agents=(cov_2nvztf191d.s[61]++,await db.Agent.findAll());cov_2nvztf191d.s[62]++;t.true(AgentStub.findAll.called,'findAll should be called on model');cov_2nvztf191d.s[63]++;t.true(AgentStub.findAll.calledOnce,'findAll should be called once');cov_2nvztf191d.s[64]++;t.true(AgentStub.findAll.calledWith(),'findAll should be called without args');cov_2nvztf191d.s[65]++;t.deepEqual(agents,agentFixtures.all,'agents should be the same');cov_2nvztf191d.s[66]++;t.is(agents.length,agentFixtures.all.length,'should be the same length');});cov_2nvztf191d.s[67]++;test.serial('Agents#findConnected',async t=>{cov_2nvztf191d.f[12]++;const agents=(cov_2nvztf191d.s[68]++,await db.Agent.findConnected());cov_2nvztf191d.s[69]++;t.true(AgentStub.findAll.called,'findAll should be called ');cov_2nvztf191d.s[70]++;t.true(AgentStub.findAll.calledOnce,'findAll should be called once');cov_2nvztf191d.s[71]++;t.deepEqual(agents,agentFixtures.connected,'should be equal');});cov_2nvztf191d.s[72]++;test.serial('Agents#findByUsername',async t=>{cov_2nvztf191d.f[13]++;const agents=(cov_2nvztf191d.s[73]++,await db.Agent.findByUserName(username));cov_2nvztf191d.s[74]++;t.true(AgentStub.findAll.called,'findAll should be called on model');cov_2nvztf191d.s[75]++;t.true(AgentStub.findAll.calledOnce,'findAll should be called once');cov_2nvztf191d.s[76]++;t.true(AgentStub.findAll.calledWith(ArgsUserName),'findAll should be called with username args');cov_2nvztf191d.s[77]++;t.deepEqual(agents,agentFixtures.userName,'should be equal');});cov_2nvztf191d.s[78]++;test.serial('Agent#createOrUpdate - new',async t=>{cov_2nvztf191d.f[14]++;const agent=(cov_2nvztf191d.s[79]++,await db.Agent.createOrUpdate(newAgent));cov_2nvztf191d.s[80]++;t.true(AgentStub.findOne.called,'findOne should be called on model');cov_2nvztf191d.s[81]++;t.true(AgentStub.findOne.calledOnce,'findOne should be called once');cov_2nvztf191d.s[82]++;t.true(AgentStub.findOne.calledWith({where:{uuid:newAgent.uuid}}),'findOne should be called with uuid args');cov_2nvztf191d.s[83]++;t.true(AgentStub.create.called,'create should be called on model');cov_2nvztf191d.s[84]++;t.true(AgentStub.create.calledOnce,'create should be called once');cov_2nvztf191d.s[85]++;t.true(AgentStub.create.calledWith(newAgent),'create should be called with specified args');cov_2nvztf191d.s[86]++;t.deepEqual(agent,newAgent,'agent should be the same');});//# sourceMappingURL=/home/david/code/daceverse/daceverse-db/node_modules/.cache/ava/c440f5f403c26474472f19675cb43769.js.map