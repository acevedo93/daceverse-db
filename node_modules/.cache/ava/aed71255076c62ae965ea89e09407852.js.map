{"version":3,"sources":["src/tests/fixtures/agent.fixture.js"],"names":["agent","id","uuid","name","username","hostname","pid","connected","createdAt","Date","updatedAt","agents","extend","AgentDontExist","obj","values","clone","Object","assign","module","exports","single","all","newAgent","filter","a","userName","platzi","findById","shift","byuuid"],"mappings":"AAAA;;AAEA,MAAMA,KAAK,GAAG;AACZC,EAAAA,EAAE,EAAE,CADQ;AAEZC,EAAAA,IAAI,EAAE,aAFM;AAGZC,EAAAA,IAAI,EAAE,SAHM;AAIZC,EAAAA,QAAQ,EAAE,UAJE;AAKZC,EAAAA,QAAQ,EAAE,WALE;AAMZC,EAAAA,GAAG,EAAE,CANO;AAOZC,EAAAA,SAAS,EAAE,IAPC;AAQZC,EAAAA,SAAS,EAAE,IAAIC,IAAJ,EARC;AASZC,EAAAA,SAAS,EAAE,IAAID,IAAJ;AATC,CAAd;AAYA,MAAME,MAAM,GAAG,CACbX,KADa,EAEbY,MAAM,CAACZ,KAAD,EAAQ;AACZC,EAAAA,EAAE,EAAE,CADQ;AAEZC,EAAAA,IAAI,EAAE,aAFM;AAGZC,EAAAA,IAAI,EAAE,UAHM;AAIZC,EAAAA,QAAQ,EAAE,UAJE;AAKZC,EAAAA,QAAQ,EAAE,WALE;AAMZC,EAAAA,GAAG,EAAE,CANO;AAOZC,EAAAA,SAAS,EAAE,KAPC;AAQZC,EAAAA,SAAS,EAAE,IAAIC,IAAJ,EARC;AASZC,EAAAA,SAAS,EAAE,IAAID,IAAJ;AATC,CAAR,CAFO,EAabG,MAAM,CAACZ,KAAD,EAAQ;AACZC,EAAAA,EAAE,EAAE,CADQ;AAEZC,EAAAA,IAAI,EAAE;AAFM,CAAR,CAbO,CAAf;AAkBA,MAAMW,cAAc,GAAG;AACrBZ,EAAAA,EAAE,EAAE,CADiB;AAErBC,EAAAA,IAAI,EAAE,YAFe;AAGrBC,EAAAA,IAAI,EAAE,aAHe;AAIrBC,EAAAA,QAAQ,EAAE,UAJW;AAKrBC,EAAAA,QAAQ,EAAE,WALW;AAMrBC,EAAAA,GAAG,EAAE,CANgB;AAOrBC,EAAAA,SAAS,EAAE,IAPU;AAQrBC,EAAAA,SAAS,EAAE,IAAIC,IAAJ,EARU;AASrBC,EAAAA,SAAS,EAAE,IAAID,IAAJ;AATU,CAAvB;;AAYA,SAASG,MAAT,CAAiBE,GAAjB,EAAsBC,MAAtB,EAA8B;AAC5B,QAAMC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,GAAlB,CAAd;AACA,SAAOG,MAAM,CAACC,MAAP,CAAcF,KAAd,EAAqBD,MAArB,CAAP;AACD;;AAEDI,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,MAAM,EAAErB,KADO;AAEfsB,EAAAA,GAAG,EAAEX,MAFU;AAGfY,EAAAA,QAAQ,EAAEV,cAHK;AAIfN,EAAAA,SAAS,EAAEI,MAAM,CAACa,MAAP,CAAcC,CAAC,IAAIA,CAAC,CAAClB,SAArB,CAJI;AAKfmB,EAAAA,QAAQ,EAAEf,MAAM,CAACa,MAAP,CAAcC,CAAC,IAAIA,CAAC,CAACE,MAAF,KAAa,UAAhC,CALK;AAMfC,EAAAA,QAAQ,EAAE3B,EAAE,IAAIU,MAAM,CAACa,MAAP,CAAcC,CAAC,IAAIA,CAAC,CAACxB,EAAF,KAASA,EAA5B,EAAgC4B,KAAhC,EAND;AAOfC,EAAAA,MAAM,EAAE5B,IAAI,IAAIS,MAAM,CAACa,MAAP,CAAcC,CAAC,IAAIA,CAAC,CAACvB,IAAF,KAAWA,IAA9B,EAAqC2B,KAArC;AAPD,CAAjB","sourceRoot":"/home/david/code/daceverse/daceverse-db","sourcesContent":["'use strict'\n\nconst agent = {\n  id: 1,\n  uuid: 'yyy-yyy-yyy',\n  name: 'fixture',\n  username: 'dodorian',\n  hostname: 'test-host',\n  pid: 0,\n  connected: true,\n  createdAt: new Date(),\n  updatedAt: new Date()\n}\n\nconst agents = [\n  agent,\n  extend(agent, {\n    id: 2,\n    uuid: 'yyy-yyy-yyy',\n    name: 'fixture2',\n    username: 'dodorian',\n    hostname: 'test-host',\n    pid: 0,\n    connected: false,\n    createdAt: new Date(),\n    updatedAt: new Date()\n  }),\n  extend(agent, {\n    id: 3,\n    uuid: 'xxx-xxx-xxx'\n  })\n]\nconst AgentDontExist = {\n  id: 3,\n  uuid: 'fff-fff-ff',\n  name: 'fixture2Â¿43',\n  username: 'dodorian',\n  hostname: 'test-host',\n  pid: 0,\n  connected: true,\n  createdAt: new Date(),\n  updatedAt: new Date()\n}\n\nfunction extend (obj, values) {\n  const clone = Object.assign({}, obj)\n  return Object.assign(clone, values)\n}\n\nmodule.exports = {\n  single: agent,\n  all: agents,\n  newAgent: AgentDontExist,\n  connected: agents.filter(a => a.connected),\n  userName: agents.filter(a => a.platzi === 'dodorian'),\n  findById: id => agents.filter(a => a.id === id).shift(),\n  byuuid: uuid => agents.filter(a => a.uuid === uuid ).shift()\n}\n"]}