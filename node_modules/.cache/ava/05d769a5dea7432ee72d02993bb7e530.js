'use strict';

const test = require('ava');

const proxyquire = require('proxyquire');

const sinon = require('sinon');

const sandbox = null;
const config = {
  // este objeto de configuracion se le pasa a la base solo como base
  // la configuracion de la base de prueba se genera en index validando que tiene esa config
  logging: function () {}
};
const AgentStub = {
  hasMany: sandbox.spy()
};
let MetricStub = null;
let db = null;
test.beforeEach(async () => {
  MetricStub = {
    belongsTo: sinon.spy()
  }; // obtenemos el modulo de configuracion de base de datos

  const setupDatabase = proxyquire('../', {
    './models/agent': () => AgentStub,
    './models/metric': () => MetricStub
  });
  db = await setupDatabase(config);
});
test('make it pass', t => {
  t.pass();
});
test('metric exist', t => {
  t.truthy(db.Metric, 'Metric service should exist');
});
//# sourceMappingURL=/home/david/code/daceverse/daceverse-db/node_modules/.cache/ava/05d769a5dea7432ee72d02993bb7e530.js.map